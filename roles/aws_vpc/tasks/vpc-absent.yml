---
- name: Get the VPC ID for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ ec2_name_prefix }}-vpc"
    region: "{{ ec2_region }}"
  register: vpc_net_facts

- name: Set ec2_vpc_id value
  set_fact:
    ec2_vpc_id: "{{ vpc_net_facts.vpcs[0].id|default('WORKSHOP_UNDEF') }}"

- name: Get EC2 instance info for {{ ec2_name_prefix }}-vpc
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      "vpc-id": "{{ ec2_vpc_id }}"
  register: all_vpc_instances

- name: Terminate EC2 instances
  amazon.aws.ec2:
    region: "{{ ec2_region }}"
    state: absent
    instance_ids: "{{ all_vpc_instances.instances | map(attribute='instance_id') | list }}"
    wait: true
    wait_timeout: "{{ 300 | int}}"
  register: result_ec2_destroy
  when: all_vpc_instances.instances

- name: Delete security group {{ ec2_name_prefix }}-sg
  ec2_group:
    name: "{{ ec2_name_prefix }}-sg"
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    state: absent
  register: delete_sg
  until: delete_sg is not failed
  retries: 5
  when: vpc_net_facts.vpcs|length > 0

- name: Get cidrs for subnets
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ ec2_region }}"
    filters:
      vpc-id: "{{ ec2_vpc_id }}"
  register: subnet_info

- set_fact:
    subnet_cidrs: "{{ subnet_info.subnets|map(attribute='cidr_block')|list }}"

- debug:
    msg: "{{ subnet_cidrs }}"
    verbosity: 2

- name: Delete subnet for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_subnet:
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    cidr: "{{ item }}"
    state: absent
  loop: "{{ subnet_cidrs }}"

- name: Delete vpc internet gateway for {{ ec2_name_prefix }}-vpc
  ec2_vpc_igw:
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    state: absent

- name: Get route table info for {{ ec2_name_prefix }}-vpc
  ec2_vpc_route_table_info:
    region: "{{ ec2_region }}"
    filters:
      vpc_id: "{{ ec2_vpc_id }}"
  register: route_table_facts

- name: Delete route table for {{ ec2_name_prefix }}-vpc
  community.aws.ec2_vpc_route_table:
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    route_table_id: "{{ item.id }}"
    lookup: id
    state: absent
  with_items: "{{ route_table_facts.route_tables }}"
  when: item.associations == []
  register: rtb_deleted
  until: rtb_deleted is not failed
  retries: 5

- name: Delete VPC {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_net:
    name: "{{ ec2_name_prefix }}-vpc"
    cidr_block: "{{ ec2_cidr_prefix }}.0.0/16"
    region: "{{ ec2_region }}"
    state: absent
  register: vpc_deleted
  until: vpc_deleted is not failed
  retries: 5
...
